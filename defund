#!/bin/bash

while true
do

# Logo
curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/logo.sh | bash

# Menu

PS3='Select an action: '
options=(
"Install Node"
"Synchronization via StateSync"
"Synchronization via SnapShot"
"UPDATE"
"Delete Node"
"Exit")
select opt in "${options[@]}"
do
case $opt in

"Install Node")
if [ -z "$MONIKER" ]; then
  echo "*********************"
  echo -e "\e[1m\e[34m		Lets's begin\e[0m"
  echo "*********************"
  echo -e "\e[1m\e[32m	Enter your DEFUND_MONIKER:\e[0m"
  echo "_|-_|-_|-_|-_|-_|-_|"
  read DEFUND_MONIKER
  echo "_|-_|-_|-_|-_|-_|-_|"
else
  DEFUND_MONIKER=$MONIKER
fi

echo 'export DEFUND_MONIKER='$DEFUND_MONIKER >> $HOME/.bash_profile
echo "export DEFUND_CHAIN_ID=orbit-alpha-1" >> $HOME/.bash_profile
echo "export DEFUND_PORT=13" >> $HOME/.bash_profile
source $HOME/.bash_profile

CHAIN_ID="orbit-alpha-1"
CHAIN_DENOM="ufetf"
BINARY_NAME="defundd"
BINARY_VERSION_TAG="v0.2.6"

echo "$$$$$$$$$$$$$$$$$$$$$$"
echo -e "\e[1m\e[32m Node moniker:       $DEFUND_MONIKER \e[0m"
echo -e "\e[1m\e[32m Chain id:           $CHAIN_ID \e[0m"
echo -e "\e[1m\e[32m Chain demon:        $CHAIN_DENOM \e[0m"
echo -e "\e[1m\e[32m Binary version tag: $BINARY_VERSION_TAG \e[0m"
echo "$$$$$$$$$$$$$$$$$$$$$$"
sleep 1

echo -e "\e[1m\e[32m1. Updating packages and dependencies--> \e[0m" && sleep 1
#UPDATE APT
sudo apt update && apt upgrade -y
apt install curl iptables build-essential git wget jq make gcc nano tmux htop nvme-cli pkg-config libssl-dev libleveldb-dev tar clang bsdmainutils ncdu unzip libleveldb-dev -y

echo -e "        \e[1m\e[32m2. Installing GO--> \e[0m" && sleep 1
#INSTALL GO
ver="1.20.2" && \
wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz" && \
sudo rm -rf /usr/local/go && \
sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz" && \
rm "go$ver.linux-amd64.tar.gz" && \
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile && \
source $HOME/.bash_profile && \
go version

echo -e "              \e[1m\e[32m3. Downloading and building binaries--> \e[0m" && sleep 1
#INSTALL
cd $HOME
git clone https://github.com/defund-labs/defund
cd defund
git checkout v0.2.6
make install
defundd version --long | grep -e version -e commit

defundd init $DEFUND_MONIKER --chain-id $DEFUND_CHAIN_ID

wget -O $HOME/.defund/config/genesis.json "https://raw.githubusercontent.com/defund-labs/testnet/main/orbit-alpha-1/genesis.json"
wget -O $HOME/.defund/config/addrbook.json "https://share.utsa.tech/defund/addrbook.json"


echo -e "                     \e[1m\e[32m4. Set the ports--> \e[0m" && sleep 1

sed -i.bak -e "s%^proxy_app = \"tcp://127.0.0.1:26658\"%proxy_app = \"tcp://127.0.0.1:${DEFUND_PORT}658\"%; s%^laddr = \"tcp://127.0.0.1:26657\"%laddr = \"tcp://127.0.0.1:${DEFUND_PORT}657\"%; s%^pprof_laddr = \"localhost:6060\"%pprof_laddr = \"localhost:${DEFUND_PORT}061\"%; s%^laddr = \"tcp://0.0.0.0:26656\"%laddr = \"tcp://0.0.0.0:${DEFUND_PORT}656\"%; s%^prometheus_listen_addr = \":26660\"%prometheus_listen_addr = \":${DEFUND_PORT}660\"%" $HOME/.defund/config/config.toml
sed -i.bak -e "s%^address = \"0.0.0.0:9090\"%address = \"0.0.0.0:${DEFUND_PORT}90\"%; s%^address = \"0.0.0.0:9091\"%address = \"0.0.0.0:${DEFUND_PORT}91\"%; s%^address = \"tcp://0.0.0.0:1317\"%address = \"tcp://0.0.0.0:1${DEFUND_PORT}7\"%" $HOME/.defund/config/app.toml
sed -i.bak -e "s%^node = \"tcp://localhost:26657\"%node = \"tcp://localhost:${DEFUND_PORT}657\"%" $HOME/.defund/config/client.toml
external_address=$(wget -qO- eth0.me)
sed -i.bak -e "s/^external_address *=.*/external_address = \"$external_address:${DEFUND_PORT}656\"/" $HOME/.defund/config/config.toml


echo -e "                     \e[1m\e[32m5. Setup config--> \e[0m" && sleep 1


# correct config (so we can no longer use the chain-id flag for every CLI command in client.toml)
defundd config chain-id $DEFUND_CHAIN_ID

# adjust if necessary keyring-backend в client.toml 
defundd config keyring-backend test

defundd config node tcp://localhost:${DEFUND_PORT}657

# Set the minimum price for gas
sed -i.bak -e "s/^minimum-gas-prices *=.*/minimum-gas-prices = \"0.0025ufetf\"/;" ~/.defund/config/app.toml

# Add seeds/peers в config.toml
peers="9f92e47ea6861f75bf8a450a681218baae396f01@94.130.219.37:26656,f03f3a18bae28f2099648b1c8b1eadf3323cf741@162.55.211.136:26656,f8fa20444c3c56a2d3b4fdc57b3fd059f7ae3127@148.251.43.226:56656,70a1f41dea262730e7ab027bcf8bd2616160a9a9@142.132.202.86:17000,
e47e5e7ae537147a23995117ea8b2d4c2a408dcb@172.104.159.69:45656,74e6425e7ec76e6eaef92643b6181c42d5b8a3b8@defund-testnet-seed.itrocket.net:443"
sed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \"$peers\"/" $HOME/.defund/config/config.toml

seeds="9f92e47ea6861f75bf8a450a681218baae396f01@94.130.219.37:26656,f03f3a18bae28f2099648b1c8b1eadf3323cf741@162.55.211.136:26656,f8fa20444c3c56a2d3b4fdc57b3fd059f7ae3127@148.251.43.226:56656,70a1f41dea262730e7ab027bcf8bd2616160a9a9@142.132.202.86:17000,e47e5e7ae537147a23995117ea8b2d4c2a408dcb@172.104.159.69:45656,74e6425e7ec76e6eaef92643b6181c42d5b8a3b8@defund-testnet-seed.itrocket.net:443"
sed -i.bak -e "s/^seeds =.*/seeds = \"$seeds\"/" $HOME/.defund/config/config.toml

# Set up filter for "bad" peers
sed -i -e "s/^filter_peers *=.*/filter_peers = \"true\"/" $HOME/.defund/config/config.toml

#
sed -i -e "s/^timeout_commit *=.*/timeout_commit = \"60s\"/" $HOME/.defund/config/config.toml
sed -i -e "s/^timeout_propose *=.*/timeout_propose = \"60s\"/" $HOME/.defund/config/config.toml
sed -i -e "s/^create_empty_blocks_interval *=.*/create_empty_blocks_interval = \"60s\"/" $HOME/.defund/config/config.toml
sed -i 's/create_empty_blocks = .*/create_empty_blocks = true/g' ~/.defund/config/config.toml
sed -i 's/timeout_broadcast_tx_commit = ".*s"/timeout_broadcast_tx_commit = "601s"/g' ~/.defund/config/config.toml

# Set up pruning
pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="0"
pruning_interval="10"
sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/.defund/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/.defund/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/.defund/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/.defund/config/app.toml

echo -e "                     \e[1m\e[32m6. Cosmovisor--> \e[0m" && sleep 1

# Install Cosmovisor
go install cosmossdk.io/tools/cosmovisor/cmd/cosmovisor@latest
# Create directories
mkdir -p ~/.defund/cosmovisor
mkdir -p ~/.defund/cosmovisor/genesis
mkdir -p ~/.defund/cosmovisor/genesis/bin
mkdir -p ~/.defund/cosmovisor/upgrades
# Copy the binary file to the cosmovisor folder
cp `which defundd` ~/.defund/cosmovisor/genesis/bin/defundd

echo -e "                     \e[1m\e[32m7. Service File--> \e[0m" && sleep 1

# Create service file (One command)
sudo tee /etc/systemd/system/defundd.service > /dev/null <<EOF
[Unit]
Description=defundd daemon
After=network-online.target

[Service]
User=$USER
ExecStart=$(which cosmovisor) run start --x-crisis-skip-assert-invariants
Restart=always
RestartSec=3
LimitNOFILE=infinity

Environment="DAEMON_NAME=defundd"
Environment="DAEMON_HOME=${HOME}/.defund"
Environment="DAEMON_RESTART_AFTER_UPGRADE=true"
Environment="DAEMON_ALLOW_DOWNLOAD_BINARIES=false"

[Install]
WantedBy=multi-user.target
EOF

# Start the node
systemctl daemon-reload
systemctl enable defundd
systemctl restart defundd

echo '=============== SETUP FINISHED ==================='
echo -e 'Congratulations:        \e[1m\e[32mSUCCESSFUL NODE INSTALLATION\e[0m'
echo -e 'To check logs:        \e[1m\e[33mjournalctl -u defundd -f -o cat\e[0m'
echo -e "To check sync status: \e[1m\e[35mcurl localhost:${DEFUND_PORT}657/status\e[0m"

echo -e "                     \e[1m\e[32m8. Wallet--> \e[0m" && sleep 1

defundd keys add wallet
echo -e "      \e[1m\e[31m!!!!!!!!!!!!!!!!!!!!!!!!!Сору your adress and input to DEFUND_ADDRESS to save it !!!!!!!!!!!!!!!!!!!!!!!!!\e[0m'"
echo "_|-_|-_|-_|-_|-_|-_|"
echo -e "      \e[1m\e[32m DEFUND_ADDRESS:\e[0m"
echo "_|-_|-_|-_|-_|-_|-_|"
read DEFUND_ADDRESS
echo "export DEFUND_ADDRESS="${DEFUND_ADDRESS}"" >> $HOME/.bash_profile
source $HOME/.bash_profile
echo -e "      \e[1m\e[31m!!!!!!!!!SAVE!!!!!!!!!!!!!!!!SAVE YOUR MNEMONIC PHRASE!!!!!!!!!SAVE!!!!!!!!!!!!!!!!\e[0m'"

break
;;
"Synchronization via StateSync")
echo -e "      \e[1m\e[32m SOOOON\e[0m"

break
;;
"UPDATE")
echo -e "      \e[1m\e[32m SOOOON\e[0m"

break
;;
"Synchronization via SnapShot")
echo -e "      \e[1m\e[32m SOOOON\e[0m"

break
;;
"Delete Node")
sudo systemctl stop defundd && \
sudo systemctl disable defundd && \
rm /etc/systemd/system/defundd.service && \
sudo systemctl daemon-reload && \
cd $HOME && \
rm -rf defund && \
rm -rf .defundd && \
rm -rf $(which defundd)

break
;;
"Exit")
exit
esac
done
done
