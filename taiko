#!/bin/bash

# Logo
curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/logo.sh | bash

#=======================================================

# Menu
PS3='Select an action: '
options=(
"Install Node"
"Update"
"Delete"
"Exit")

if [ -z "$RPC_HOLESKY" ]; then
  if [ -z "$RPC_SEPOLIA" ]; then
    echo -e "      \e[1m\e[35m Input RPC_HOLESKY:\e[0m"
    echo "_|-_|-_|-_|-_|-_|-_|"
    read RPC_HOLESKY
    echo "_|-_|-_|-_|-_|-_|-_|"
  else
    RPC_HOLESKY="${RPC_SEPOLIA/sepolia/holesky}"
  fi
  echo 'export RPC_HOLESKY='$RPC_HOLESKY >> $HOME/.bash_profile
fi

if [ -z "$WS_HOLESKY" ]; then
  if [ -z "$RPC_HOLESKY" ]; then
    echo -e "      \e[1m\e[35m Input WS_HOLESKY:\e[0m"
    echo "_|-_|-_|-_|-_|-_|-_|"
    read WS_HOLESKY
    echo "_|-_|-_|-_|-_|-_|-_|"
  else
    WS_HOLESKY="${RPC_HOLESKY/https/wss}"
  fi
  echo 'export WS_HOLESKY='$WS_HOLESKY >> $HOME/.bash_profile
fi

source $HOME/.bash_profile

#=======================================================

select opt in "${options[@]}"
do
case $opt in
"Install Node")

#----------------------------------------------------

echo "*********************"
read -p "Enter your private key:" PROPOSER_PRIVATE_KEY

# Update the repositories
apt update && apt upgrade -y

#Instal or Update Git
sudo apt-get install git-all -y

# Install Docker
if ! [ -x "$(command -v docker)" ]; then
curl -fsSL https://get.docker.com -o get-docker.sh
sh get-docker.sh
sudo usermod -aG docker $USER
docker --version
else
echo $(docker --version)
fi

# Install Docker Compose
if ! [ -x "$(command -v docker-compose)" ]; then
sudo curl -L "https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose 
sudo chmod +x /usr/local/bin/docker-compose 
sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
docker-compose --version
else
echo $(docker-compose --version)
fi

#Clone simple-taiko-node
git clone https://github.com/taikoxyz/simple-taiko-node.git taiko
cd taiko

#Copy the sample .env files
cp .env.sample .env

sed -i "s|^L1_ENDPOINT_HTTP=.*|L1_ENDPOINT_HTTP=$RPC_HOLESKY|" .env
sed -i "s|^L1_ENDPOINT_WS=.*|L1_ENDPOINT_WS=$WS_HOLESKY|" .env
sed -i 's/^PORT_GRAFANA=.*/PORT_GRAFANA=4301/' .env
sed -i 's/^ENABLE_PROPOSER=.*/ENABLE_PROPOSER=true/' .env
sed -i "s|^PROVER_ENDPOINTS=.*|PROVER_ENDPOINTS=http://taiko-a6-prover.zkpool.io:9876|" .env
sed -i "s|^L1_PROPOSER_PRIVATE_KEY=.*|L1_PROPOSER_PRIVATE_KEY=$PROPOSER_PRIVATE_KEY|" .env

docker compose up -d

#docker rename taiko_taiko_client_proposer_1 taiko-taiko_client_proposer-1
#docker rename taiko_taiko_client_driver_1 taiko-taiko_client_driver-1
#docker rename taiko_l2_execution_engine_1 taiko-l2_execution_engine-1
#docker rename taiko_zkevm_chain_prover_rpcd_1 taiko-zkevm_chain_prover_rpcd-1
#docker rename taiko_taiko_client_prover_relayer_1 taiko-taiko_client_prover_relayer-1

break
;;

#=======================================================

"Update")

echo "*********************"
read -p "Enter your private key:" PROPOSER_PRIVATE_KEY

cd taiko
git fetch && git pull
cp .env.sample .env
sed -i "s|^L1_ENDPOINT_HTTP=.*|L1_ENDPOINT_HTTP=$RPC_HOLESKY|" .env
sed -i "s|^L1_ENDPOINT_WS=.*|L1_ENDPOINT_WS=$WS_HOLESKY|" .env
sed -i 's/^PORT_GRAFANA=.*/PORT_GRAFANA=4301/' .env
sed -i 's/^ENABLE_PROPOSER=.*/ENABLE_PROPOSER=true/' .env
sed -i "s|^PROVER_ENDPOINTS=.*|PROVER_ENDPOINTS=http://taiko-a6-prover.zkpool.io:9876|" .env
sed -i "s|^L1_PROPOSER_PRIVATE_KEY=.*|L1_PROPOSER_PRIVATE_KEY=$PROPOSER_PRIVATE_KEY|" .env
docker compose up -d

break
;;

#=======================================================

"Exit")
exit
;;
*) echo "Invalid option. Please try again.";;
esac

done
