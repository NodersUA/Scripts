#!/bin/bash

# Logo
curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/logo.sh | bash

# Set parameters
NODE_NAME="BABYLON"
NODE_CHAIN_ID="bbn-test-2"
NODE_PORT="45"
BINARY_VERSION_TAG="v0.7.2"
CHAIN_DENOM="ubbn"
BINARY_NAME="babylond"
DIRECTORY="babylon"
HIDDEN_DIRECTORY=".babylond"
NODE_URL="https://github.com/babylonchain/babylon"
GENESIS_URL="https://snapshots-testnet.nodejumper.io/babylon-testnet/genesis.json"
MINIMUM_GAS_PRICES="0.00001ubbn"
PEERS="30191694cc7836642e7c98f63dc968dfcf453146@babylon-testnet-peer.itrocket.net:39656"
SEEDS="8da45f9ff83b4f8dd45bbcb4f850999637fbfe3b@seed0.testnet.babylonchain.io:26656,4b1f8a774220ba1073a4e9f4881de218b8a49c99@seed1.testnet.babylonchain.io:26656,cf36fd32c32e0bb89682e8b8e82c03049a0f0121@babylon-testnet-seed.itrocket.net:32656"
pruning="custom"
pruning_keep_recent="100"
pruning_interval="50"
snapshot_interval="0"
indexer="null"
# *************************************

# export temp variables
echo 'export NODE_NAME='$NODE_NAME > $HOME/config.sh
echo 'export NODE_CHAIN_ID='$NODE_CHAIN_ID >> $HOME/config.sh
echo 'export NODE_PORT='$NODE_PORT >> $HOME/config.sh
echo 'export BINARY_VERSION_TAG='$BINARY_VERSION_TAG >> $HOME/config.sh
echo 'export CHAIN_DENOM='$CHAIN_DENOM >> $HOME/config.sh
echo 'export BINARY_NAME='$BINARY_NAME >> $HOME/config.sh
echo 'export DIRECTORY='$DIRECTORY >> $HOME/config.sh
echo 'export HIDDEN_DIRECTORY='$HIDDEN_DIRECTORY >> $HOME/config.sh
echo 'export NODE_URL='$NODE_URL >> $HOME/config.sh
echo 'export GENESIS_URL='$GENESIS_URL >> $HOME/config.sh
echo 'export MINIMUM_GAS_PRICES='$MINIMUM_GAS_PRICES >> $HOME/config.sh
echo 'export PEERS='$PEERS >> $HOME/config.sh
echo 'export SEEDS='$SEEDS >> $HOME/config.sh
echo 'export pruning='$pruning >> $HOME/config.sh
echo 'export pruning_keep_recent='$pruning_keep_recent >> $HOME/config.sh
echo 'export pruning_interval='$pruning_interval >> $HOME/config.sh
echo 'export snapshot_interval='$snapshot_interval >> $HOME/config.sh
echo 'export indexer='$indexer >> $HOME/config.sh
source $HOME/config.sh

# Menu

PS3='Select an action: '
options=(
"Install Node"
"Synchronization via StateSync"
"Synchronization via SnapShot"
"UPDATE"
"Delete Node"
"Diskord Bot Autoinstall"
"Autodelegate"
"Autorestart"
"Exit")
select opt in "${options[@]}"
do
case $opt in

#================================================================

"Install Node")
# import code from cosmos/install.sh
source <(curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/cosmos/install.sh)

break
;;

#================================================================

"Synchronization via StateSync")
echo -e "\e[1m\e[32m Soon...\e[0m"

break
;;

#================================================================

"UPDATE")

echo "Soon...."

echo '=============== UPDATE FINISHED ==================='
echo -e "Congratulations:    \e[1m\e[32mNode Updated to ${ver}\e[0m"
echo -e "To check logs:      \e[1m\e[33msudo journalctl -u cascadiad -f --no-hostname -o cat\e[0m"
echo -e "To restart:         \e[1m\e[33msudo systemctl restart cascadiad\e[0m"

break
;;

#================================================================

"Synchronization via SnapShot")
# install dependencies, if needed
if ! dpkg -s lz4 &> /dev/null; then
sudo apt update && apt upgrade -y
apt install lz4 -y
fi

sudo systemctl stop babylond

cp $HOME/.babylond/data/priv_validator_state.json $HOME/.babylond/priv_validator_state.json.backup 
babylond tendermint unsafe-reset-all --home $HOME/.babylond --keep-addr-book 
curl https://snapshots-testnet.nodejumper.io/babylon-testnet/babylon-testnet_latest.tar.lz4 | lz4 -dc - | tar -xf - -C $HOME/.babylond
mv $HOME/.babylond/priv_validator_state.json.backup $HOME/.babylond/data/priv_validator_state.json 

sudo systemctl restart babylond

echo '=============== SETUP FINISHED ==================='
echo -e 'Congratulations:        \e[1m\e[32mSUCCESSFUL SNAPSHOT INSTALLATION\e[0m'
echo -e 'To check logs:        \e[1m\e[33mjournalctl -u babylond -f -o cat\e[0m'

break
;;

#================================================================

"Delete Node")
sudo systemctl stop $BINARY_NAME ad_${DIRECTORY} df_${DIRECTORY}
sudo systemctl disable $BINARY_NAME ad_${DIRECTORY} df_${DIRECTORY}
rm /etc/systemd/system/$BINARY_NAME.service
rm /etc/systemd/system/ad_${BINARY_NAME}.service
#rm /etc/systemd/system/df_${BINARY_NAME}.service
sudo systemctl daemon-reload
cd $HOME
rm -rf $DIRECTORY
#rm -rf df_${DIRECTORY}
rm -rf $HIDDEN_DIRECTORY
rm -f $(which $BINARY_NAME)
rm -f /root/scripts/ad_${DIRECTORY}.sh
rm -f /root/scripts/ar_${DIRECTORY}.sh

break
;;

#================================================================

"Diskord Bot Autoinstall")
# set variables
echo 'export PROJECT="BABYLON"' >> $HOME/config.sh
echo 'export PROJECT_TOKEN="${BABYLON_TOKEN}"' >> $HOME/config.sh
echo 'export MESSAGE="!faucet $BABYLON_ADDRESS"' >> $HOME/config.sh
echo 'export DISCORD_DIR=df_${BINARY_NAME}' >> $HOME/config.sh
echo 'export CHAT_ID=1075371070493831259' >> $HOME/config.sh
source $HOME/config.sh

# import code from file
source <(curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/cosmos/df.sh)

break
;;

#================================================================

"Autodelegate")
ADDRESS=$(cascadiad keys show wallet -a)
VALOPER=$(cascadiad keys show wallet --bech val -a)
echo "export address="${ADDRESS} >> $HOME/config.sh
echo "export valoper="${VALOPER} >> $HOME/config.sh
echo 'export gas=300000' >> $HOME/config.sh
echo 'export sleep_timeout=100000' >> $HOME/config.sh
echo 'export min_balance=2000000000000000000' >> $HOME/config.sh
source $HOME/config.sh

source <(curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/cosmos/autodelegate.sh)

break
;;

#================================================================

"Autorestart")
source <(curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/cosmos/autorestart.sh)

systemctl daemon-reload
systemctl enable ar_${DIRECTORY}.service
systemctl restart ar_${DIRECTORY}.service

break
;;

#================================================================

"Exit")
exit
esac
done
