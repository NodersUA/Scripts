#!/bin/bash

# Збереження змінних, якщо їх ще не існує
if [ -z "$GITHUB_EMAIL" ]; then
    read -p $'\e[1;35mВведи GitHub Email:\e[0m ' GITHUB_EMAIL
    echo "export GITHUB_EMAIL=\"$GITHUB_EMAIL\"" >> ~/.bashrc
    export GITHUB_EMAIL
fi

if [ -z "$GITHUB_USERNAME" ]; then
    read -p $'\e[1;35mВведи GitHub Username:\e[0m ' GITHUB_USERNAME
    echo "export GITHUB_USERNAME=\"$GITHUB_USERNAME\"" >> ~/.bashrc
    export GITHUB_USERNAME
fi

if [ -z "$ADDRESS" ]; then
    read -p $'\e[1;35mВведи адресу свого гаманця:\e[0m ' ADDRESS
    echo "export ADDRESS=\"$ADDRESS\"" >> ~/.bashrc
    export ADDRESS
fi

if [ -z "$PRIV_KEY" ]; then
    read -p $'\e[1;35mВведи приватний ключ:\e[0m ' PRIV_KEY
    echo "export PRIV_KEY=\"$PRIV_KEY\"" >> ~/.bashrc
    echo "export DROSERA_PRIVATE_KEY=\"$PRIV_KEY\"" >> ~/.bashrc
    export PRIV_KEY
    export DROSERA_PRIVATE_KEY="$PRIV_KEY"
fi

source ~/.bashrc

# Меню дій
PS3=$'\e[1;35m\nОберіть дію:\e[0m\n'
options=(
  "Апдейт сервера і Деплой Трапа"
  "Запуск ноди (dryrun + private)"
  "Запуск сервісу ноди"
  "Подивитись логи"
  "Opt in"
  "Вихід"
)
select opt in "${options[@]}"
do
case $REPLY in
  1)
    sudo apt-get update && sudo apt-get upgrade -y && \
    sudo apt install curl ufw iptables build-essential git wget lz4 jq make gcc nano automake autoconf tmux htop nvme-cli libgbm1 pkg-config libssl-dev libleveldb-dev tar clang bsdmainutils ncdu unzip libleveldb-dev -y

    curl -L https://app.drosera.io/install | bash && source ~/.bashrc && droseraup
    curl -L https://foundry.paradigm.xyz | bash && source ~/.bashrc && foundryup

    mkdir -p ~/my-drosera-trap && cd ~/my-drosera-trap
    git config --global user.email "$GITHUB_EMAIL"
    git config --global user.name "$GITHUB_USERNAME"
    forge init -t drosera-network/trap-foundry-template

    curl -fsSL https://bun.sh/install | bash && source ~/.bashrc && bun install && forge build
    export DROSERA_PRIVATE_KEY="$PRIV_KEY"
    drosera apply
    break
    ;;

  2)
    drosera dryrun && cd
    
    cd ~/my-drosera-trap && source ~/.bashrc
    sed -i '/^private_trap/d' drosera.toml
    sed -i '/^whitelist/d' drosera.toml
    echo "private_trap = true" >> drosera.toml
    echo "whitelist = [\"$ADDRESS\"]" >> drosera.toml
    export DROSERA_PRIVATE_KEY="$PRIV_KEY"
    drosera apply
    
    break
    ;;

  3)
    cd ~/my-drosera-trap
    curl -LO https://github.com/drosera-network/releases/releases/download/v1.16.2/drosera-operator-v1.16.2-x86_64-unknown-linux-gnu.tar.gz
    tar -xvf drosera-operator-v1.16.2-x86_64-unknown-linux-gnu.tar.gz
    cp drosera-operator /usr/bin
    drosera-operator register --eth-rpc-url https://ethereum-holesky-rpc.publicnode.com --eth-private-key $DROSERA_PRIVATE_KEY
    ufw allow 31313
    ufw allow 31314

sudo tee /etc/systemd/system/drosera.service > /dev/null <<EOF
[Unit]
Description=Drosera Node Service
After=network-online.target

[Service]
User=$USER
Restart=always
RestartSec=15
LimitNOFILE=65535
ExecStart=$(which drosera-operator) node --db-file-path /root/.drosera.db --network-p2p-port 31313 --server-port 31314 \\
    --eth-rpc-url https://ethereum-holesky-rpc.publicnode.com \\
    --eth-backup-rpc-url https://1rpc.io/holesky \\
    --drosera-address 0xea08f7d533C2b9A62F40D5326214f39a8E3A32F8 \\
    --eth-private-key $PRIV_KEY \\
    --listen-address 0.0.0.0 \\
    --network-external-p2p-address $(curl -s https://api.ipify.org) \\
    --disable-dnr-confirmation true

[Install]
WantedBy=multi-user.target
EOF

    sudo systemctl daemon-reload
    sudo systemctl enable drosera
    sudo systemctl restart drosera
    break
    ;;

  4)
    journalctl -u drosera -f -o cat
    break
    ;;

  5)
    read -p $'\e[1;35mВведи trap-config адресу:\e[0m ' TRAP_CONFIG_ADDRESS
    drosera-operator optin \
      --eth-rpc-url https://ethereum-holesky-rpc.publicnode.com \
      --eth-private-key $DROSERA_PRIVATE_KEY \
      --trap-config-address $TRAP_CONFIG_ADDRESS
    break
    ;;

  6)
    echo -e "\e[1;35mСкрипт завершено.\e[0m"
    break
    ;;
  *)
    echo -e "\e[1;31mНевірний вибір, спробуй знову.\e[0m"
    ;;
esac
done
