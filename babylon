#!/bin/bash

# Logo
curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/logo.sh | bash

# Set parameters
NODE_NAME="BABYLON"
NODE_CHAIN_ID="bbn-test-3"
NODE_PORT="45"
BINARY_VERSION_TAG="v0.8.3"
CHAIN_DENOM="ubbn"
BINARY_NAME="babylond"
DIRECTORY="babylon"
HIDDEN_DIRECTORY=".babylond"
NODE_URL="https://github.com/babylonchain/babylon"
GENESIS_URL="https://ss-t.babylon.nodestake.org/genesis.json"
MINIMUM_GAS_PRICES="0.00001ubbn"
PEERS=$(curl -s https://ss-t.babylon.nodestake.org/peers.txt)
SEEDS="49b4685f16670e784a0fe78f37cd37d56c7aff0e@3.14.89.82:26656,9cb1974618ddd541c9a4f4562b842b96ffaf1446@3.16.63.237:26656"
pruning="custom"
pruning_keep_recent="100"
pruning_interval="50"
snapshot_interval="0"
indexer="null"
# *************************************

# export temp variables
echo 'export NODE_NAME='$NODE_NAME > $HOME/config.sh
echo 'export NODE_CHAIN_ID='$NODE_CHAIN_ID >> $HOME/config.sh
echo 'export NODE_PORT='$NODE_PORT >> $HOME/config.sh
echo 'export BINARY_VERSION_TAG='$BINARY_VERSION_TAG >> $HOME/config.sh
echo 'export CHAIN_DENOM='$CHAIN_DENOM >> $HOME/config.sh
echo 'export BINARY_NAME='$BINARY_NAME >> $HOME/config.sh
echo 'export DIRECTORY='$DIRECTORY >> $HOME/config.sh
echo 'export HIDDEN_DIRECTORY='$HIDDEN_DIRECTORY >> $HOME/config.sh
echo 'export NODE_URL='$NODE_URL >> $HOME/config.sh
echo 'export GENESIS_URL='$GENESIS_URL >> $HOME/config.sh
echo 'export MINIMUM_GAS_PRICES='$MINIMUM_GAS_PRICES >> $HOME/config.sh
echo 'export PEERS='$PEERS >> $HOME/config.sh
echo 'export SEEDS='$SEEDS >> $HOME/config.sh
echo 'export pruning='$pruning >> $HOME/config.sh
echo 'export pruning_keep_recent='$pruning_keep_recent >> $HOME/config.sh
echo 'export pruning_interval='$pruning_interval >> $HOME/config.sh
echo 'export snapshot_interval='$snapshot_interval >> $HOME/config.sh
echo 'export indexer='$indexer >> $HOME/config.sh
source $HOME/config.sh

# Menu

PS3='Select an action: '
options=(
"Install Node"
"Synchronization via StateSync"
"Synchronization via SnapShot"
"UPDATE"
"Delete Node"
"Diskord Bot Autoinstall"
"Autodelegate"
"Autorestart"
"Create validator"
"Diskord Bot sbtc Autoinstall"
"Exit")
select opt in "${options[@]}"
do
case $opt in

#================================================================

"Install Node")
# import code from cosmos/install.sh
source <(curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/cosmos/install.sh)

break
;;

#================================================================

"Synchronization via StateSync")
echo -e "\e[1m\e[32m Soon...\e[0m"

break
;;

#================================================================

"UPDATE")

echo "Soon...."

echo '=============== UPDATE FINISHED ==================='
echo -e "Congratulations:    \e[1m\e[32mNode Updated to ${ver}\e[0m"
echo -e "To check logs:      \e[1m\e[33msudo journalctl -u cascadiad -f --no-hostname -o cat\e[0m"
echo -e "To restart:         \e[1m\e[33msudo systemctl restart cascadiad\e[0m"

break
;;

#================================================================

"Synchronization via SnapShot")
# install dependencies, if needed
if ! dpkg -s lz4 &> /dev/null; then
sudo apt update && apt upgrade -y
apt install lz4 -y
fi

sudo systemctl stop babylond

sed -i.bak -E "s|^(enable[[:space:]]+=[[:space:]]+).*$|\1false|" ~/.babylond/config/config.toml
cp $HOME/.babylond/data/priv_validator_state.json $HOME/.babylond/priv_validator_state.json.backup
rm -rf $HOME/.babylond/data
rm -rf $HOME/.babylond/wasm
babylond tendermint unsafe-reset-all --home ~/.babylond/ --keep-addr-book
SNAP_NAME=$(curl -s https://ss-t.babylon.nodestake.org/ | egrep -o ">20.*\.tar.lz4" | tr -d ">")
curl -o - -L https://ss-t.babylon.nodestake.org/${SNAP_NAME}  | lz4 -c -d - | tar -x -C $HOME/.babylond
mv $HOME/.babylond/priv_validator_state.json.backup $HOME/.babylond/data/priv_validator_state.json

sudo systemctl restart babylond

echo '=============== SETUP FINISHED ==================='
echo -e 'Congratulations:        \e[1m\e[32mSUCCESSFUL SNAPSHOT INSTALLATION\e[0m'
echo -e 'To check logs:        \e[1m\e[33mjournalctl -u babylond -f -o cat\e[0m'

break
;;

#================================================================

"Delete Node")
sudo systemctl stop $BINARY_NAME ad_${DIRECTORY} df_${DIRECTORY}
sudo systemctl disable $BINARY_NAME ad_${DIRECTORY} df_${DIRECTORY}
rm /etc/systemd/system/$BINARY_NAME.service
rm /etc/systemd/system/ad_${BINARY_NAME}.service
#rm /etc/systemd/system/df_${BINARY_NAME}.service
sudo systemctl daemon-reload
cd $HOME
rm -rf $DIRECTORY
#rm -rf df_${DIRECTORY}
rm -rf $HIDDEN_DIRECTORY
rm -f $(which $BINARY_NAME)
rm -f /root/scripts/ad_${DIRECTORY}.sh
rm -f /root/scripts/ar_${DIRECTORY}.sh

break
;;

#================================================================

"Diskord Bot Autoinstall")
# set variables
BABYLON_ADDRESS=$($BINARY_NAME keys show wallet -a --keyring-backend test)
echo 'export PROJECT="BABYLON"' >> $HOME/config.sh
echo 'export PROJECT_TOKEN="${BABYLON_TOKEN}"' >> $HOME/config.sh
echo 'export MESSAGE="!faucet $BABYLON_ADDRESS"' >> $HOME/config.sh
echo 'export DISCORD_DIR=df_${DIRECTORY}' >> $HOME/config.sh
echo 'export CHAT_ID=1075371070493831259' >> $HOME/config.sh
source $HOME/config.sh

# import code from file
source <(curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/cosmos/df.sh)

break
;;

#================================================================

"Diskord Bot sbtc Autoinstall")

# set variables

if [ -z "$BABYLON_SBTC_ADDRESS" ]; then
  echo "*********************"
  echo -e "\e[1m\e[32m	Enter your BABYLON_SBTC_ADDRESS:\e[0m"
  echo "*********************"
  read BABYLON_SBTC_ADDRESS
  echo 'export BABYLON_SBTC_ADDRESS='$BABYLON_SBTC_ADDRESS >> $HOME/.bash_profile
fi

echo 'export PROJECT="BABYLON_SBTC"' >> $HOME/config.sh
echo 'export PROJECT_TOKEN="${BABYLON_SBTC_TOKEN}"' >> $HOME/config.sh
echo 'export MESSAGE="!faucet $BABYLON_SBTC_ADDRESS"' >> $HOME/config.sh
echo 'export DISCORD_DIR=df_babylon_sbtc' >> $HOME/config.sh
echo 'export CHAT_ID=1212398536256393227' >> $HOME/config.sh
source $HOME/config.sh

# import code from file
source <(curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/cosmos/df.sh)

break
;;

#================================================================

"Autodelegate")
ADDRESS=$(cascadiad keys show wallet -a)
VALOPER=$(cascadiad keys show wallet --bech val -a)
echo "export address="${ADDRESS} >> $HOME/config.sh
echo "export valoper="${VALOPER} >> $HOME/config.sh
echo 'export gas=300000' >> $HOME/config.sh
echo 'export sleep_timeout=100000' >> $HOME/config.sh
echo 'export min_balance=2000000000000000000' >> $HOME/config.sh
source $HOME/config.sh

source <(curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/cosmos/autodelegate.sh)

break
;;

#================================================================

"Autorestart")
source <(curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/cosmos/autorestart.sh)

systemctl daemon-reload
systemctl enable ar_${DIRECTORY}.service
systemctl restart ar_${DIRECTORY}.service

break
;;

#================================================================

"Create validator")

cd babylon

if [ -z "$MONIKER" ]; then
  echo "*********************"
  echo -e "\e[1m\e[32m	Enter your MONIKER:\e[0m"
  echo "*********************"
  read MONIKER
  echo 'export MONIKER='$MONIKER >> $HOME/.bash_profile
fi

if [ -z "$WEBSITE" ]; then
  echo "*********************"
  echo -e "\e[1m\e[32m	Enter your WEBSITE:\e[0m"
  echo "*********************"
  read WEBSITE
  echo 'export WEBSITE='$WEBSITE >> $HOME/.bash_profile
fi

if [ -z "$EMAIL" ]; then
  echo "*********************"
  echo -e "\e[1m\e[32m	Enter your EMAIL:\e[0m"
  echo "*********************"
  read EMAIL
  echo 'export EMAIL='$EMAIL >> $HOME/.bash_profile
fi

if [ -z "$IDENTITY" ]; then
  echo "*********************"
  echo -e "\e[1m\e[32m	Enter your IDENTITY:\e[0m"
  echo "*********************"
  read IDENTITY
  echo 'export IDENTITY='$IDENTITY >> $HOME/.bash_profile
fi

source ~/.bash_profile

sudo tee ~/babylon/validator.json > /dev/null <<EOF
{
  "pubkey": $(babylond tendermint show-validator),
  "amount": "1000000ubbn",
  "moniker": "$MONIKER",
  "website": "$WEBSITE",
  "security": "$EMAIL",
  "identity": "$IDENTITY",
  "commission-rate": "0.10",
  "commission-max-rate": "0.20",
  "commission-max-change-rate": "0.1",
  "min-self-delegation": "1"
}
EOF

#sleep $(shuf -i 1-10000 -n 1)

babylond tx checkpointing create-validator ~/babylon/validator.json \
    --chain-id="bbn-test-3" \
    --gas="auto" \
    --gas-adjustment="1.5" \
    --gas-prices="0.025ubbn" \
    --from wallet \
    --keyring-backend test \
    -y

break
;;

#================================================================

"Exit")
exit
esac
done
