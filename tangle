#!/bin/bash

# Logo
curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/logo.sh | bash

# Menu
PS3='Select an action: '
options=(
"Install Node"
"Diskord Bot Autoinstall"
"Update"
"Delete"
"Exit")

select opt in "${options[@]}"
do
case $opt in
"Install Node")

#===============================================================

if [ -z "$MONIKER" ]; then
  echo "*********************"
  echo -e "\e[1m\e[34m		Lets's begin\e[0m"
  echo "*********************"
  echo -e "\e[1m\e[32m	Enter your MONIKER:\e[0m"
  echo "*********************"
  read MONIKER
  echo 'export MONIKER='$MONIKER >> $HOME/.bash_profile
  source ~/.bash_profile
fi

# Update the repositories
apt update && apt upgrade -y
apt install curl iptables build-essential git wget jq make gcc nano tmux htop nvme-cli pkg-config libssl-dev libleveldb-dev libgmp3-dev tar clang bsdmainutils ncdu unzip llvm libudev-dev make protobuf-compiler -y

# Update or install rust
if command -v rustup &> /dev/null; then
    rustup update
else
    curl https://sh.rustup.rs -sSf | sh
    source $HOME/.cargo/env
fi
rustc --version

ufw allow 43333
ufw allow 9943

cd $HOME
git clone https://github.com/webb-tools/tangle.git
cd tangle/
git checkout v0.6.1
cargo build --release
cp target/release/tangle /usr/local/bin/
tangle --version

sudo tee /etc/systemd/system/tangle.service > /dev/null << EOF
[Unit]
Description=Tangle Validator Node
After=network-online.target
StartLimitIntervalSec=0
 
[Service]
User=$USER
Restart=always
RestartSec=3
ExecStart=/usr/local/bin/tangle \
  --base-path $HOME/.tangle/data/ \
  --name $MONIKER \
  --chain tangle-testnet \
  --node-key-file "$HOME/.tangle/node-key" \
  --port 43333 \
  --rpc-port 9943 \
  --validator \
  --no-mdns \
  --auto-insert-keys \
  --rpc-cors all \
  --pruning archive \
  --telemetry-url "wss://telemetry.polkadot.io/submit/ 0"
 
[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable tangle
systemctl restart tangle

echo '=============== INSLALL FINISHED ==================='
echo -e "To check logs:                \e[1m\e[33msudo journalctl -u tangle -f -o cat\e[0m"
echo -e "To check node in telemetry:   \e[1m\e[33mhttps://telemetry.polkadot.io/#list/0x3d22af97d919611e03bbcbda96f65988758865423e89b2d99547a6bb61452db3\e[0m"

break
;;

#================================================================

"Diskord Bot Autoinstall")
# set variables
if [ -z "$TANGLE_ADDRESS" ]; then
  echo "*********************"
  echo -e "\e[1m\e[32m	Enter your TANGLE_ADDRESS:\e[0m"
  echo "*********************"
  read TANGLE_ADDRESS
  echo 'export TANGLE_ADDRESS='$TANGLE_ADDRESS >> $HOME/.bash_profile
  source ~/.bash_profile
fi
echo 'export PROJECT="TANGLE"' >> $HOME/config.sh
echo 'export PROJECT_TOKEN="${TANGLE_TOKEN}"' >> $HOME/config.sh
echo 'export MESSAGE="!send $TANGLE_ADDRESS"' >> $HOME/config.sh
echo 'export DISCORD_DIR=df_tangle' >> $HOME/config.sh
echo 'export CHAT_ID=1183826417625075753' >> $HOME/config.sh
source $HOME/config.sh

# import code from file
source <(curl -s https://raw.githubusercontent.com/NodersUA/Scripts/main/cosmos/df.sh)

break
;;

#===========================================================================

"Update")

systemctl stop tangle
/root/.tangle/data/chains/tangle-testnet/db/full/

sudo tee /etc/systemd/system/tangle.service > /dev/null << EOF
[Unit]
Description=Tangle Validator Node
After=network-online.target
StartLimitIntervalSec=0
 
[Service]
User=$USER
Restart=always
RestartSec=3
ExecStart=/usr/local/bin/tangle \
  --base-path $HOME/.tangle/data/ \
  --name $MONIKER \
  --chain tangle-testnet \
  --node-key-file "$HOME/.tangle/node-key" \
  --port 43333 \
  --rpc-port 9943 \
  --validator \
  --no-mdns \
  --rpc-cors all \
  --pruning archive \
  --telemetry-url "wss://telemetry.polkadot.io/submit/ 0"
 
[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl restart tangle

break
;;

#===========================================================================

"Delete")

sudo systemctl stop tangle
sudo systemctl disable tangle
rm -rf ~/tangle ~/.tangle ~/.local/share/tangle/
rm /etc/systemd/system/tangle.service
rm /usr/local/bin/tangle

break
;;

#===========================================================================

"Exit")
exit
;;
*) echo "Invalid option. Please try again.";;
esac

done
